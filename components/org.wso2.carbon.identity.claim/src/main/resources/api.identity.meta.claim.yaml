  # This is the WSO2 Product API for functionalities related to meta information of claims
  swagger: '2.0'

  # This is your document metadata
  info:
    version: "1.0.0"
    title: Meta Claim API
    description: |
      This document specifies a **RESTful API** written with [swagger 2](http://swagger.io/) to manage meta information of claims in **WSO2 Identity Server**.
    contact:
      name: "WSO2"
      url: "http://wso2.com/products/identity-server/"
      email: "architecture@wso2.com"
    license:
      name: "Apache 2.0"
      url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  ######################################################
  # The fixed parts of the URLs of the API
  ######################################################

  # The schemes supported by the API
  schemes:
    - https

  # The domain of the API.
  # This is configured by the customer during deployment.
  # The given host is just an example.
  host: apis.is.com

  # The base path of the API.
  # Will be prefixed to all paths.
  basePath: /api/identity/claim/meta/v0.9

  # The following media types can be passed as input in message bodies of the API.
  # The actual media type must be specified in the Content-Type header field of the request.
  # The default is json, i.e. the Content-Type header is not needed to
  # be set, but supporting it serves extensibility.
  consumes:
    - application/json

  # The following media types may be passed as output in message bodies of the API.
  # The media type(s) consumable by the requestor is specified in the Accept header field
  # of the corresponding request.
  # The actual media type returned will be specfied in the Content-Type header field
  # of the of the response.
  # The default of the Accept header is json, i.e. there is not needed to
  # set the value, but supporting it serves extensibility.
  produces:
    - application/json
  paths:
    # All the available claim dialects.
    /dialects:
      get:
        description: |
           Get all the available claim dialects

        responses:
          200:
            description: An array of available claim dialects with the dialect URI
            schema:
              type: array
              items:
                $ref: '#/definitions/ClaimDialect'

          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'

        tags:
          - Meta Claim

    # Add a new claim dialects.
    # /dialect:
      post:
        description: |
           Add a new claim dialect.

        # This are the post parameters:
        parameters:
          - name: claimDialect
            in: body
            description:  new dialect with it's dialect URI.
            required: true
            schema:
              $ref: '#/definitions/ClaimDialect'

        responses:
          201:
            description: Successfully Created.
            schema:
              title: key
              type: string
          400:
            description: Bad Request
            schema:
               $ref: '#/definitions/Error'

          500:
            description: Server Error
            schema:
               $ref: '#/definitions/Error'

        tags:
          - Meta Claim

    # Rename an exisiting claim dialect.
    # /dialect/rename:
      put:
        description: |
           Rename an existing claim dialect.
        parameters:
          - name: claimPair
            in: body
            description:  old claim dialect that is to be renamed.
            required: true
            schema:
              $ref: '#/definitions/PairOfClaims'

        responses:
          201:
            description: Successfully Created.
            schema:
              title: key
              type: string
          400:
            description: Bad Request
            schema:
               $ref: '#/definitions/Error'
          401:
            description: Resource not found.
            schema:
              title: key
              type: string
          500:
            description: Server Error
            schema:
               $ref: '#/definitions/Error'

        tags:
          - Meta Claim

       # Removing an exisiting claim dialect.
    # /dialect/remove:
      delete:
        description: |
           Remove an existing claim dialect.
        parameters:
          - name: claim
            in: query
            description:  claim dialect that is to be removed.
            required: true
            type: string

        responses:
          200:
            description: Successfully Removed.
            schema:
              title: key
              type: string
          404:
            description: Resource not found.
            schema:
              title: key
              type: string
          500:
            description: Server Error
            schema:
               $ref: '#/definitions/Error'

        tags:
          - Meta Claim

    /localclaims:
      get:
        description: |
           Get all the available local claims
        responses:
          200:
            description: An array of available local claims with their meta details
            schema:
              type: array
              items:
                $ref: '#/definitions/LocalClaim'

          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'

        tags:
          - Meta Claim

           # Add a new claim dialects.
    # /localclaim:
      post:
        description: |
           Add a new local claim.

        # This are the post parameters:
        parameters:
          - name: localclaim
            in: body
            description:  new local claim with it's meta details
            required: true
            schema:
              $ref: '#/definitions/LocalClaim'

        responses:
          201:
            description: Successfully Created.
            schema:
              title: key
              type: string
          400:
            description: Bad Request
            schema:
               $ref: '#/definitions/Error'

          500:
            description: Server Error
            schema:
               $ref: '#/definitions/Error'

        tags:
          - Meta Claim

    # /localclaim/update:
      patch:
        description: |
           Add a new local claim.
        # This are the post parameters:
        parameters:
          - name: localclaim
            in: body
            description:  new local claim with it's meta details
            required: true
            schema:
              $ref: '#/definitions/LocalClaim'

        responses:
          201:
            description: Successfully Created.
            schema:
              title: key
              type: string
          400:
            description: Bad Request
            schema:
               $ref: '#/definitions/Error'

          500:
            description: Server Error
            schema:
               $ref: '#/definitions/Error'
        tags:
              - Meta Claim

       # Removing an exisiting claim dialect.
    # /localclaim/remove:
      delete:
        description: |
           Remove an existing local claim.
        parameters:
          - name: claim
            in: query
            description:  claim dialect that is to be removed.
            required: true
            type: string
        responses:
          200:
            description: Successfully Removed.
            schema:
              title: key
              type: string
          404:
            description: Resource not found.
            schema:
              title: key
              type: string
          500:
            description: Server Error
            schema:
               $ref: '#/definitions/Error'

        tags:
          - Meta Claim

    /externalclaims:
      get:
        description: |
           Get all the available external claims for the given dialect

        parameters:
          - name: dialect
            in: query
            description:  claim dialect URI for the external claims to be retrieved.
            required: true
            type: string
        responses:
          200:
            description: An array of available external claims with their meta details
            schema:
              type: array
              items:
                $ref: '#/definitions/ExternalClaim'

          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'

        tags:
          - Meta Claim

    # Add a new external claim
    # /externalclaim:
      post:
        description: |
           Add a new external claim.

        # This are the post parameters:
        parameters:
          - name: externalclaim
            in: body
            description:  new extrenal claim with it's meta details
            required: true
            schema:
              $ref: '#/definitions/ExternalClaim'

        responses:
          201:
            description: Successfully Created.
            schema:
              title: key
              type: string
          400:
            description: Bad Request
            schema:
               $ref: '#/definitions/Error'

          500:
            description: Server Error
            schema:
               $ref: '#/definitions/Error'

        tags:
          - Meta Claim

    # /externalclaim/update:
      patch:
        description: |
           Update an external claim

        # This are the post parameters:
        parameters:
          - name: externalclaim
            in: body
            description:  External claim with updated meta details
            required: true
            schema:
              $ref: '#/definitions/ExternalClaim'

        responses:
          201:
            description: Successfully Created.
            schema:
              title: key
              type: string
          400:
            description: Bad Request
            schema:
               $ref: '#/definitions/Error'

          500:
            description: Server Error
            schema:
               $ref: '#/definitions/Error'

        tags:
          - Meta Claim

       # Removing an exisiting claim dialect.
    # /externalclaim/remove:
      delete:
        description: |
           Remove an existing external claim.
        parameters:
          - name: dialectUri
            in: query
            description:  claim dialect URI of the claim URI, that is to be removed.
            required: true
            type: string
          - name: claimUri
            in: query
            description:  claim URI that is to be removed.
            required: true
            type: string
        responses:
          200:
            description: Successfully Removed.
            schema:
              title: key
              type: string
          404:
            description: Resource not found.
            schema:
              title: key
              type: string
          500:
            description: Server Error
            schema:
               $ref: '#/definitions/Error'

        tags:
          - Meta Claim

  definitions:
  #-----------------------------------------------------
  # Represents the simplest form of the metadata of a claim dialect.
  #-----------------------------------------------------
    ClaimDialect:
      type: object
      mappings:
        claim-dialect-uri:
          type: string
  #-----------------------------------------------------
  # Represents the attribute mapping for a claim
  #-----------------------------------------------------
    AttributeMapping:
      type: object
      mappings:
        user-store.domain:
          type: string
        attribute-name:
          type: string

  #-----------------------------------------------------
  # Represents the definition of local claim
  #-----------------------------------------------------
    LocalClaim:
      type: object
      mappings:
        mapped-attributes:
          type: array
          items:
            $ref: '#/definitions/AttributeMapping'
        claim-mappings:
          type: object
          items:
            $ref: '#/definitions/ClaimProperties'


  #-----------------------------------------------------
  # Represents the definition of an external claim
  #-----------------------------------------------------
    ExternalClaim:
      type: object
      mappings:
        claim-dialect-uri:
          type: string
        claim-uri:
          type: string
        local-claim:
          type: string



  #-----------------------------------------------------
  # Represents the old claim and new claim pair
  #-----------------------------------------------------
    PairOfClaims:
      type: object
      mappings:
        old-claim:
          $ref: '#/definitions/PairOfClaims'
        new-claim:
          $ref: '#/definitions/PairOfClaims'

  #-----------------------------------------------------
  # Properties of claims as key value pairs
  #-----------------------------------------------------
    # ClaimProperties:
    #   required:
    #     - default
    #   mappings:
    #     default:
    #       type: string
    #   additionalProperties:
    #     type: string

    KeyValue:
      mappings:
        firstname:
          type: string
        lastname:
          type: string
    ClaimProperties:
      description: a (key, MapItem) map. `default`is an example key
      mappings:
        default:
          $ref: '#/definitions/KeyValue'
      additionalProperties:
          $ref: '#/definitions/KeyValue'
  #-----------------------------------------------------
  # The Error Response  object
  #-----------------------------------------------------
    Error:
      type: object
      mappings:
        code:
          type: string
        message:
          type: string
        description:
          type: string

